{"version":3,"sources":["Pages/Actions.js","Pages/CommonDatatypes.js","Queries/QueryConstructor.js","Pages/CommonAPI.js","Pages/objects/ActionView.js","Pages/objects/Paginator.js","Pages/objects/ObjectOrderingAndFiltering.js","Pages/objects/ObjectListControl.js","Pages/objects/InstanceActionModal.js","Pages/objects/ActiveObjectList.js","Pages/objects/ActionButtons.js","Pages/Objects.js","App.js","index.js"],"names":["ActionList","action","bg","Accordion","Card","className","Header","Toggle","as","variant","eventKey","name","Collapse","Body","this","props","schema","actions","object_actions","forEach","e","a","push","object","general","get_all_actions","action_cards","action_card","React","Component","Actions","Row","Col","sm","StringConvert","value","JSON","stringify","NumberConvert","convert","Number","isNaN","Error","BooleanConvert","convertValue","type","length","slice","undefined","output","parse","i","join","validateValueType","values","Array","isArray","datatypeToFieldType","CustomTypes","required","customType","find","typename","field","options","fields","placeholder","spawn_fields","PropertyToString","property","toString","makeCompleteQuery","parameters","data","mutation","makeAction","createReturnForType","indentSpace","indent","repeat","parameters_array","data_array","not_include","Object","entries","additional_fields","datatype","object_attributes_array","additional_property","query_arguments","returnForAttribute","include_subObjects","substring","includeSubObjects","includeActions","returnString","actionsInsert","attribute","createListQuery","offset","count","filters","listAction","actionObject","Send_to_API","query","callback","error_callback","console","log","fetch","method","headers","getCSRF","credentials","body","then","response","json","catch","text","r","api_logout","user","operation","api_check","username","success","reason","stringify_replacer","key","getCookie","cookieValue","document","cookie","cookies","split","trim","decodeURIComponent","setCookie","date","Date","setTime","getTime","toUTCString","ActionView","context","handleChangeFields","caller","event","newState","state","target","setState","fieldTypeValidation","handleChangeCustomProperty","parent_field","additionalFieldTypeValidation","handleIgnoreProperty","checked","validity","deleteAdditionalField","parent_type","field_name","keys","constructor","addAdditionalField","additional_type","handleChangeQueryCodeMirror","editor","update_response","errors","error","argOrField","exec","subfield","indexOf","params","responseAlert","ReturnValueEditorInstance","refresh","componentDidMount","QueryEditorInstance","createSubField","isValid","isInvalid","onChange","deleteFieldFn","includes","InputGroup","Form","Control","Append","Button","onClick","options_form","disabled","hidden","o","toLowerCase","defaultValue","create_field","value_type","custom_dataTypes","ignorable","selected_options","option","Checkbox","aria-label","refreshCodeMirror","setTimeout","param_fields","data_fields","param","default","unshift","border","Title","noValidate","Tabs","defaultActiveKey","onSelect","Tab","title","theme","autoRefresh","lineWrapping","keyMap","mode","smartIndent","lineNumbers","onBeforeChange","editorDidMount","tabClassName","readOnly","PaginationApplet","PageNumbers","pages_num","Pagination","Prev","Item","changePageFn","active","Next","Ellipsis","modalShow","current_page","showModal","modalClose","jumpToPage","page","modalPage","create_modal","Modal","show","onHide","closeButton","FormControl","Footer","OrderApplet","sendFilters","filtersObject","changeFilterFn","addToOrder","newOrder","order","orderingParse","removeFromOrder","index","ordering","splice","orderModalShow","openOrderModal","orderModalClose","create_order_modal","map","b","aria-describedby","filterModalShow","openFilterModal","filterModalClose","handleSubfieldChange","fieldName","newObj","subfieldValidation","filtersValidity","create_filter_modal","filter","selected","OrderAndPagination","typeFilters","expandAllFn","collapseAllFn","InstanceActionModal","modalDetails","Action","ActiveObjectList","change_filters","reloadSchema","load_objects","objects_json","results","Math","ceil","loaded_objects","change_page","target_page","per_page","makeObjectActionButton","showInstanceAction","tooltipText","tooltipPlacement","tooltipId","instanceActionModal","hideInstanceAction","openAllCards","expandedTabs","closeAllCards","openOrCloseCard","card_id","newExpanded","objectAccordion","objectAttributes","objectActions","openTab","act","activeKey","ButtonGroup","vertical","generateObjectList","objectItems","obj","pages","objectType","ObjectActionsButtons","handleShow","buttons","action_list","render_button","ObjectList","activeObject","item","ListGroup","changeActive","items","render_item","Objects","changeObject","activeChange","TopBar","navbarKey","login_text","loginTextHandler","bind","loginButton","maybeSubmit","login_fn","view","viewChange","display_username","current_user","Dropdown","saved_logins","logins","make_quickLogin","is_anon","Navbar","expand","Brand","href","Nav","Link","changeView","OverlayTrigger","placement","delay","hide","overlay","Tooltip","id","connected","Menu","aria-labelledby","alignRight","logout_fn","Divider","onKeyDown","logout_fn_all","ViewSelector","activeView","windows","changeUser","newArr","concat","logoutUser","logoutAll","val","View","api_login","App","Container","fluid","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ac3a80e1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Col, Row, Accordion, Card} from \"react-bootstrap\";\r\n\r\nfunction get_all_actions(schema){\r\n    let object_actions = [];\r\n    if (schema === null) {\r\n        return {}\r\n    }\r\n    schema[\"__objects\"].forEach((e) => e.actions.forEach((a) => {object_actions.push(a)}))\r\n    return {object: object_actions, general: schema[\"__actions\"]}\r\n}\r\n\r\n\r\nclass ActionList extends React.Component{\r\n    action_card(action, bg){\r\n        return(\r\n            <Accordion key={action.name}>\r\n                <Card className={bg}>\r\n                    <Card.Header>\r\n                        <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"0\">\r\n                            {action.name}\r\n                        </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>Hello! I'm the body</Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </Accordion>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        if(this.props.schema === null){\r\n            return(\r\n                <>\r\n                    <strong>Could not obtain schema, check your connection to the API, then refresh</strong>\r\n                </>\r\n            )\r\n        }\r\n        const actions = get_all_actions(this.props.schema);\r\n        let action_cards = []\r\n        actions.general.forEach((a) => {action_cards.push(this.action_card(a, \"bg-object\"))})\r\n        actions.object.forEach((a) => {action_cards.push(this.action_card(a, \"bg-action\"))})\r\n        return (\r\n            <>\r\n                {action_cards}\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nclass Actions extends React.Component{\r\n    render(){\r\n        return (\r\n            <Row className=\"flex-grow-1 overflow-hidden\">\r\n                <Col sm={12} className='p-4 mh-100'>\r\n                    <ActionList schema={this.props.schema}/>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Actions\r\n","function StringConvert(value){\r\n    return JSON.stringify(value)\r\n}\r\n\r\nfunction NumberConvert(value){\r\n    const convert = Number(value)\r\n    if (isNaN(convert)){\r\n        throw new Error(\"Value is not a number\")\r\n    } else {\r\n        return convert\r\n    }\r\n}\r\n\r\nfunction BooleanConvert(value){\r\n    switch(value){\r\n        case 'true':\r\n            return true\r\n        case 'false':\r\n            return false\r\n        default:\r\n            throw new Error(\"Invalid value in field\")\r\n    }\r\n}\r\n\r\nfunction convertValue(value, type){\r\n    try{\r\n        if(type[type.length-1] === \"!\"){\r\n            type = type.slice(0, -1);\r\n            if(value === null || value === undefined){\r\n                return StringConvert(value)\r\n            }\r\n        } else {\r\n            if(value === null || value === undefined){\r\n                return null\r\n            }\r\n        }\r\n        //Array\r\n        if(type[0] === \"[\" && type[type.length - 1] === \"]\"){\r\n            let output = []\r\n            JSON.parse(value).forEach((i) => output.push(convertValue(i, type.slice(1, -1))))\r\n            return \"[\" + output.join(\", \") + \"]\"\r\n        }\r\n        switch(type){\r\n            case 'Integer':\r\n            case 'Float':\r\n                return NumberConvert(value)\r\n            case 'String':\r\n                return StringConvert(value)\r\n            case 'Boolean':\r\n                return BooleanConvert(value)\r\n            case 'Date':\r\n            case 'Time':\r\n            case 'Datetime':\r\n            case 'Duration':\r\n            default:\r\n                return StringConvert(value)\r\n        }\r\n    } catch {\r\n        return StringConvert(value)\r\n    }\r\n}\r\n\r\nfunction validateValueType(value, type){\r\n    try{\r\n        //Not-nullable\r\n        if(type[type.length-1] === \"!\"){\r\n            type = type.slice(0, -1);\r\n            if(value === null || value === undefined){\r\n                return false\r\n            }\r\n        } else {\r\n            if(value === null || value === undefined){\r\n                return true\r\n            }\r\n        }\r\n        //Array\r\n        if(type[0] === \"[\" && type[type.length - 1] === \"]\"){\r\n            let values = JSON.parse(value)\r\n            if (!Array.isArray(values)){\r\n                return false\r\n            }\r\n            for (let i = 0; i < values.length; i++){\r\n                if (!validateValueType(values[i], type.slice(1, -1))){\r\n                    return false\r\n                }\r\n            }\r\n            return true\r\n        }\r\n        switch(type){\r\n            case 'Integer':\r\n            case 'Float':\r\n                NumberConvert(value)\r\n                break\r\n            case 'String':\r\n                StringConvert(value)\r\n                break\r\n            case 'Boolean':\r\n                BooleanConvert(value)\r\n                break\r\n            case 'Date':\r\n            case 'Time':\r\n            case 'Datetime':\r\n            case 'Duration':\r\n            default:\r\n                return null\r\n        }\r\n        return true\r\n    } catch {\r\n        return false\r\n    }\r\n}\r\n\r\nfunction datatypeToFieldType(type, CustomTypes=[]){\r\n    //try{\r\n        //Handle full nullable\r\n        let required = (type[type.length-1] !== \"!\")\r\n        if(!required){\r\n            type = type.slice(0, -1)\r\n        }\r\n        //Handle arrays\r\n        //TODO\r\n        let customType = CustomTypes.find(i => (i.typename === type))\r\n        if(typeof customType !== \"undefined\"){\r\n            return {field: \"Select\", required: required, options: customType.fields, placeholder: \"Add Filter: \", spawn_fields: true}\r\n        }\r\n\r\n        switch(type){\r\n            case 'Integer':\r\n            case 'Float':\r\n                return {field: \"Number\", required: required}\r\n            case 'String':\r\n                return {field: \"Text\", required: required}\r\n            case 'Boolean':\r\n                return {field: \"Select\", required: required, options: [{name: \"true\"}, {name: \"false\"}], placeholder: \"Select Bool\", spawn_fields: false}\r\n            case 'Date':\r\n            case 'Time':\r\n            case 'Datetime':\r\n            case 'Duration':\r\n            default:\r\n                return {field: \"Text\", required: required}\r\n        }\r\n    //} catch {\r\n    //    console.log(\"Hrerer\")\r\n    //    return {field: 'Text', required: true}\r\n    //}\r\n}\r\n\r\nfunction IsTypeList(type){\r\n    return (type.substring(0, 9) === \"Paginated\")\r\n}\r\n\r\nfunction PropertyToString(property, object){\r\n    if(typeof object[property] === 'object' && object[property] !== null){\r\n        if(\"__str__\" in object[property]){\r\n            return object[property][\"__str__\"]\r\n        }\r\n    }\r\n    else {\r\n        return object[property].toString()\r\n    }\r\n}\r\n\r\n\r\nexport {convertValue, validateValueType, datatypeToFieldType, IsTypeList, PropertyToString};\r\n","import {convertValue} from \"../Pages/CommonDatatypes\";\r\n\r\nfunction makeCompleteQuery (action, parameters, data, schema){\r\n    return (action.mutation? \"mutation\": \"query\")+ \" {\\n\" + makeAction(action.name, parameters, data) +\r\n        createReturnForType(action[\"return_type\"], schema[\"__types\"], 4) + \"}\\n\"\r\n}\r\n\r\n\r\nfunction makeAction(action, parameters= {}, data={}, indentSpace=2) {\r\n    const indent = \" \".repeat(indentSpace)\r\n\r\n    //TODO add subfields handling\r\n    let parameters_array = []\r\n    let data_array = []\r\n    for (const property in parameters){\r\n        if (!parameters[property].not_include){\r\n            if (Object.entries(parameters[property].additional_fields).length === 0){\r\n                parameters_array.push(property + \": \" + convertValue(parameters[property].value, parameters[property].datatype))\r\n            } else {\r\n                let object_attributes_array = []\r\n                for (const additional_property in parameters[property].additional_fields){\r\n                    object_attributes_array.push(additional_property + \": \" + convertValue(parameters[property].additional_fields[additional_property].value,\r\n                                                                                           parameters[property].additional_fields[additional_property].datatype))\r\n                }\r\n                parameters_array.push(property + \": {\"+ object_attributes_array.join(\", \") + \"}\")\r\n            }\r\n        }\r\n    }\r\n    for (const property in data){\r\n        if (!data[property].not_include){\r\n            if (Object.entries(data[property].additional_fields).length === 0){\r\n                data_array.push(property + \": \" + convertValue(data[property].value, data[property].datatype))\r\n            } else {\r\n                let object_attributes_array = []\r\n                for (const additional_property in data[property].additional_fields){\r\n                    object_attributes_array.push(additional_property + \": \" + convertValue(data[property].additional_fields[additional_property].value,\r\n                                                                                           data[property].additional_fields[additional_property].datatype))\r\n                }\r\n                data_array.push(property + \": {\"+ object_attributes_array.join(\", \") + \"}\")\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    if(parameters_array.length === 0 && data_array.length === 0){\r\n        return indent + action\r\n    }\r\n    let query_arguments = parameters_array.join(\", \")+\r\n        ((parameters_array.length === 0 || data_array.length === 0)? \"\" : \", \" )+\r\n        ((data_array.length === 0)? \"\": (\"data: {\" + data_array.join(\", \") + \"}\"))\r\n    if (query_arguments !== \"\"){\r\n        query_arguments = \"(\" + query_arguments + \")\"\r\n    }\r\n\r\n    return indent + action + query_arguments\r\n}\r\n\r\nfunction extractQueryParts(input, prefix){\r\n    return {action: input.substring(0, input.indexOf(prefix) + prefix.length - 1), returnInfo: input.substring(input.indexOf(prefix) + prefix.length)}\r\n}\r\n\r\nfunction returnForAttribute(field, CustomTypes, indentSpace=2, include_subObjects=false){\r\n    const indent = \" \".repeat(indentSpace)\r\n    // Don't care about nullable:\r\n    if(field.typename[field.typename.length-1] === \"!\"){\r\n        field.typename = field.typename.slice(0, -1);\r\n    }\r\n    let customType = CustomTypes.find(i => (i.typename === field.typename))\r\n    // Paginated List or Custom Type\r\n    // TODO Ignores followups, but could get messy\r\n    if(field.typename.substring(0, 9) === \"Paginated\"){\r\n        if(include_subObjects){\r\n            return indent + field.name + \" {\\n\" + indent + \"    __str__\\n\" + indent + \"}\\n\"\r\n        }\r\n        return indent + \"# Further ObjectList exist but is not listed automatically\\n\" + indent + \"# \" + field.name + \"{}\\n\"\r\n        //return indent + field.name + createReturnForType(field.typename, CustomTypes, indentSpace + 2)\r\n    }\r\n    // Custom Type\r\n    // TODO Ignores followups, but could get messy\r\n    if(typeof customType !== \"undefined\"){\r\n        if(include_subObjects){\r\n            return indent + field.name + \" {\\n\" + indent + \"    __str__\\n\" + indent + \"}\\n\"\r\n        }\r\n        return indent + \"# Further objects exist but are not listed automatically\\n\" + indent + \"# \" + field.name + \"{}\\n\"\r\n    }\r\n\r\n    return indent + field.name + \"\\n\"\r\n}\r\n\r\n\r\nfunction createReturnForType(type, CustomTypes, indentSpace=2, includeSubObjects=false, includeActions=false){\r\n    const indent = \" \".repeat(indentSpace)\r\n    //Don't care about nullable:\r\n    if(type[type.length-1] === \"!\"){\r\n        type = type.slice(0, -1);\r\n    }\r\n    let customType = CustomTypes.find(i => (i.typename === type))\r\n    //Paginated\r\n    if(type.substring(0, 9) === \"Paginated\"){\r\n        return \"{\\n\" + indent + \"count\\n\" +\r\n                       indent + \"data (limit: 20) \" + createReturnForType(type.substring(10, type.length-1), CustomTypes, indentSpace + 2, includeSubObjects) +\r\n               \" \".repeat(indentSpace-2) + \"}\\n\"\r\n    }\r\n    if(typeof customType !== \"undefined\"){\r\n        let returnString = \"\"\r\n        if(includeActions){\r\n            returnString += actionsInsert(indentSpace)\r\n        }\r\n        if (includeSubObjects) {\r\n            returnString += \" \".repeat(indentSpace) + \"__str__\\n\"\r\n        }\r\n        for (const attribute of customType.fields){\r\n            returnString += returnForAttribute(attribute, CustomTypes, indentSpace, type, includeSubObjects)\r\n        }\r\n        return \" {\\n\" + returnString + \" \".repeat(indentSpace-2) + \"}\\n\"\r\n    }\r\n    return \" \\n\"\r\n}\r\n\r\nfunction createListQuery(object, CustomTypes, offset=0, count=20, filters={}){\r\n    const listAction = object.name + \"List\";\r\n    const actionObject = object.actions.find(i => (i.name === listAction))\r\n    if(actionObject === undefined){\r\n        throw new Error(\"List action does not exist or is not named < Object >List\")\r\n    }\r\n\r\n    //Don't care about nullable:\r\n    if(actionObject[\"return_type\"][actionObject[\"return_type\"].length-1] === \"!\"){\r\n        actionObject[\"return_type\"] = actionObject[\"return_type\"].slice(0, -1);\r\n    }\r\n    return (actionObject.mutation? \"mutation {\\n\": \"query {\\n\") + makeAction(listAction, filters) +\r\n        \"{\\n    count\\n    data (limit:\" + count + \", offset:\" + offset + \")\" +\r\n        createReturnForType(actionObject[\"return_type\"].substring(10, actionObject[\"return_type\"].length-1), CustomTypes, 6, true, true) +\r\n        \"  }\\n}\"\r\n}\r\n\r\nfunction actionsInsert(indentSpace=2){\r\n    return (\r\n        \" \".repeat(indentSpace) + \"__actions {\\n\" +\r\n        \" \".repeat(indentSpace+2) + \"name\\n\" +\r\n        \" \".repeat(indentSpace+2) + \"parameters{\\n\" +\r\n        \" \".repeat(indentSpace+4) + \"name\\n\" +\r\n        \" \".repeat(indentSpace+4) + \"typename\\n\" +\r\n        \" \".repeat(indentSpace+4) + \"default\\n\" +\r\n        \" \".repeat(indentSpace+2) + \"}\\n\" +\r\n        \" \".repeat(indentSpace+2) + \"data {\\n\" +\r\n        \" \".repeat(indentSpace+4) + \"name\\n\" +\r\n        \" \".repeat(indentSpace+4) + \"typename\\n\" +\r\n        \" \".repeat(indentSpace+4) + \"default\\n\" +\r\n        \" \".repeat(indentSpace+2) + \"}\\n\") +\r\n        \" \".repeat(indentSpace+2) + \"mutation\\n\" +\r\n        \" \".repeat(indentSpace+2) + \"return_type\\n\" +\r\n        \" \".repeat(indentSpace+2) + \"permitted\\n\" +\r\n        \" \".repeat(indentSpace+2) + \"deny_reason\\n\" +\r\n        \" \".repeat(indentSpace+2) + \"retry_in\\n\" +\r\n        \" \".repeat(indentSpace) + \"}\\n\"\r\n\r\n}\r\n\r\n\r\nexport {makeCompleteQuery, extractQueryParts, createReturnForType, createListQuery}\r\n","function Send_to_API(query, callback=()=>{}, error_callback=()=>{}){\r\n    console.log(query)\r\n    fetch('../api/', {\r\n    // fetch('http://localhost:8000/api/', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'X-CSRFToken': getCSRF()\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({\r\n            query: query\r\n        }),\r\n    }).then((response) => response.json()).catch(e => error_callback(e.text))\r\n        .then(r => {callback(r); return r}).catch(e => error_callback(e.text))\r\n}\r\n\r\nfunction api_login(user, callback, error_callback){\r\n    if(user === null){\r\n        api_logout(user, callback, error_callback);\r\n        return\r\n    }\r\n\r\n    //TODO change to ./login\r\n    fetch('./login',\r\n    // fetch('http://localhost:8000/simple/login',\r\n        {\r\n            method: 'POST',\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'X-CSRFToken': getCSRF()\r\n            },\r\n            credentials: 'include',\r\n            body: JSON.stringify({\r\n                username: user, operation:'login'})\r\n        }).then(r => r.json()).then(r => api_check(user, r, callback, error_callback)).catch(e=>error_callback(e.text))\r\n}\r\n\r\nfunction api_logout(user, callback, error_callback){\r\n    //TODO change to ./login\r\n    fetch('./login',\r\n    // fetch('http://localhost:8000/simple/login',\r\n        {\r\n            method: 'POST',\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'X-CSRFToken': getCSRF()\r\n            },\r\n            credentials: 'include',\r\n            body: JSON.stringify({operation:'logout'})\r\n        }).then(r => r.json()).then(r => api_check(user, r, callback, error_callback)).catch(e=>error_callback(e.text))\r\n}\r\n\r\nfunction api_login_status(callback, error_callback){\r\n    //TODO change to ./login\r\n    fetch('./login',\r\n    // fetch('http://localhost:8000/simple/login',\r\n        {\r\n            method: 'POST',\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'X-CSRFToken': getCSRF()\r\n            },\r\n            credentials: 'include',\r\n            body: JSON.stringify({operation:'status'})\r\n        }).then(r => r.json()).then(r => api_check(r.username, r, callback, error_callback))\r\n}\r\n\r\nfunction api_check(username, response, callback, error_callback){\r\n    // console.log(response)\r\n    if(response.success){\r\n        callback(username)\r\n    } else {\r\n        error_callback(response.reason)\r\n    }\r\n}\r\n\r\nfunction stringify_replacer(key, value){\r\n    if (key === \"__typename\"){ return undefined }\r\n    else return value\r\n}\r\n\r\nfunction getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nfunction setCookie(name, value){\r\n    let date = new Date();\r\n    //Expire in a week\r\n    date.setTime(date.getTime()+(7*24*60*60*1000));\r\n    document.cookie = name + \"=\" + value + \"; expires=\" + date.toUTCString();\r\n}\r\n\r\nfunction getSimpleSchema(callback, error_callback){\r\n    const query = `\r\n    {\r\n      __types{\r\n        typename\r\n        fields{\r\n          name\r\n          typename\r\n        }\r\n      }\r\n      __objects{\r\n        name\r\n        pk_field\r\n        actions{\r\n          name\r\n          parameters{\r\n            name\r\n            typename\r\n            default\r\n          }\r\n          data {\r\n            name\r\n            typename\r\n            default\r\n          }\r\n          mutation\r\n          return_type\r\n          permitted\r\n          deny_reason\r\n          retry_in\r\n        }\r\n      }\r\n    __actions{\r\n      name\r\n      parameters{\r\n        name\r\n        typename\r\n        default\r\n      }\r\n      data {\r\n        name\r\n        typename\r\n        default\r\n      }\r\n      mutation\r\n      return_type\r\n      permitted\r\n      deny_reason\r\n      retry_in\r\n    }\r\n}`\r\n    Send_to_API(query, (val)=>{if(val !== undefined){callback(val.data)}else{error_callback(val)}}, error_callback)\r\n}\r\n\r\nfunction getCSRF(){\r\n    return getCookie('csrftoken')\r\n}\r\n\r\n\r\nexport {Send_to_API, getSimpleSchema, stringify_replacer, getCookie, setCookie, api_login, api_logout, api_login_status};\r\n","import React from \"react\";\r\nimport {makeCompleteQuery} from \"../../Queries/QueryConstructor\";\r\nimport {datatypeToFieldType, validateValueType} from \"../CommonDatatypes\";\r\nimport {Send_to_API, stringify_replacer} from \"../CommonAPI\";\r\nimport {Button, Col, Form, InputGroup, Card, Row, Tab, Tabs} from \"react-bootstrap\";\r\nimport {Controlled as CodeMirror} from \"react-codemirror2\";\r\nimport {UnControlled as CodeMirrorUn} from \"react-codemirror2\";\r\n\r\nimport 'codemirror/mode/javascript/javascript';\r\nimport 'codemirror-graphql/mode';\r\nimport 'codemirror/keymap/sublime';\r\nimport 'codemirror/addon/display/autorefresh';\r\nimport 'codemirror/theme/idea.css';\r\n\r\n\r\nclass ActionView extends React.Component{\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        const action = this.props.action;\r\n        let param_fields = {};\r\n        let data_fields = {};\r\n        if (\"parameters\" in action){\r\n            action.parameters.forEach((param) => {\r\n                param_fields[param.name] = {\r\n                    defaultValue:(\"default\" in param)? param.default : \"\",\r\n                    value:'',\r\n                    datatype: param.typename,\r\n                    validity:null,\r\n                    not_include: param.typename[param.typename.length - 1] !== \"!\" || param.default !== null,\r\n                    additional_fields:{}}})\r\n        }\r\n        if (\"data\" in action){\r\n            action.data.forEach((data) => {\r\n                data_fields[data.name] = {\r\n                    defaultValue:(\"default\" in data)? data.default : \"\",\r\n                    value:'',\r\n                    datatype: data.typename,\r\n                    validity:null,\r\n                    not_include: data.typename[data.typename.length - 1] !== \"!\" || data.default !== null,\r\n                    additional_fields:{}}})\r\n        }\r\n\r\n        this.state = {\r\n            parameters: param_fields,\r\n            data: data_fields,\r\n            query: '',\r\n            response: '',\r\n            responseAlert: false\r\n        };\r\n\r\n        this.QueryEditorInstance = null;\r\n        this.ReturnValueEditorInstance = null;\r\n    }\r\n\r\n\r\n    handleChangeFields = (caller, type, event) => {\r\n        let newState = {parameters: this.state.parameters, data: this.state.data}\r\n        newState[type][caller].value = event.target.value;\r\n        newState[\"query\"] = makeCompleteQuery(this.props.action, newState.parameters, newState.data, this.props.schema)\r\n        this.setState(newState)\r\n        this.fieldTypeValidation(caller, event.target.value, type)\r\n    }\r\n\r\n    handleChangeCustomProperty = (parent_field, caller, type, event) => {\r\n        let newState = {parameters: this.state.parameters, data: this.state.data}\r\n        newState[type][parent_field][\"additional_fields\"][caller].value = event.target.value;\r\n        newState[\"query\"] = makeCompleteQuery(this.props.action, newState.parameters, newState.data, this.props.schema)\r\n        this.setState(newState)\r\n        this.additionalFieldTypeValidation(parent_field, caller, event.target.value, type)\r\n    }\r\n\r\n    handleIgnoreProperty = (caller, type, event) => {\r\n        let newState = {parameters: this.state.parameters, data: this.state.data}\r\n        newState[type][caller].not_include = !event.target.checked;\r\n        newState[\"query\"] = makeCompleteQuery(this.props.action, newState.parameters, newState.data, this.props.schema)\r\n        if (!event.target.checked) {\r\n            newState[type][caller].validity = null\r\n            this.setState(newState)\r\n        } else {\r\n            this.setState(newState)\r\n            this.fieldTypeValidation(caller, this.state[type][caller].value, type)\r\n        }\r\n    }\r\n\r\n    deleteAdditionalField = (caller, parent_type, field_name) => {\r\n        let newState = {parameters: this.state.parameters, data: this.state.data}\r\n        delete newState[parent_type][caller].additional_fields[field_name]\r\n        if(newState[parent_type][caller].additional_fields && Object.keys(newState[parent_type][caller].additional_fields).length === 0 && newState[parent_type][caller].additional_fields.constructor === Object){\r\n            newState[parent_type][caller].not_include = true\r\n        }\r\n        newState[\"query\"] = makeCompleteQuery(this.props.action, newState.parameters, newState.data, this.props.schema)\r\n        this.setState(newState)\r\n    }\r\n\r\n    addAdditionalField = (caller, parent_type, additional_type, event) =>{\r\n        let newState = {parameters: this.state.parameters, data: this.state.data}\r\n        newState[parent_type][caller].additional_fields[event.target.value] = {datatype:additional_type, value: '', validity:null}\r\n        newState[parent_type][caller].not_include = false\r\n        newState[\"query\"] = makeCompleteQuery(this.props.action, newState.parameters, newState.data, this.props.schema)\r\n        this.setState(newState)\r\n        event.target.value = \"__Datatype_Placeholder\"\r\n    }\r\n\r\n    additionalFieldTypeValidation = (parent_field, caller, value, type) => {\r\n        let newState = {parameters: this.state.parameters, data: this.state.data}\r\n        newState[type][parent_field][\"additional_fields\"][caller].validity = validateValueType(value, newState[type][parent_field][\"additional_fields\"][caller].datatype)\r\n        this.setState(newState)\r\n    }\r\n\r\n    fieldTypeValidation = (caller, value, type) => {\r\n        let newState = {parameters: this.state.parameters, data: this.state.data}\r\n        newState[type][caller].validity = validateValueType(value, newState[type][caller][\"datatype\"])\r\n        this.setState(newState)\r\n    }\r\n\r\n    handleChangeQueryCodeMirror = (editor, event, value) => {\r\n        this.setState({query: value});\r\n    }\r\n\r\n    update_response = (value) => {\r\n        // console.log(value)\r\n        if ('errors' in value){\r\n            try {\r\n                for (const error of value.errors){\r\n                    const argOrField = /field \"[^\"]*\"|Argument \"[^\"]*\"/.exec(error[\"message\"])\r\n                    let field = \"\"\r\n                    let subfield = \"\"\r\n                    // console.log(argOrField)\r\n                    if(argOrField !== null){\r\n                        if(argOrField[0].indexOf(\"Argument\") !== -1){\r\n                            field = argOrField[0].substring(argOrField[0].indexOf(\"\\\"\")+1, argOrField[0].length-1)\r\n                            try {\r\n                                subfield = /field \"[^\"]*\"/.exec(error[\"message\"])[0]\r\n                                subfield = subfield.substring(subfield.indexOf(\"\\\"\")+1, subfield.length-1)\r\n                            } catch (e) {\r\n                            }\r\n                        } else {\r\n                            field = argOrField[0].substring(argOrField[0].indexOf(\"\\\"\")+1, argOrField[0].length-1)\r\n                        }\r\n                        if (field === \"data\"){\r\n                            let data = this.state.data\r\n                            if (subfield === \"\"){\r\n                                if(field in data){\r\n                                    data[field].validity = false\r\n                                }\r\n                            } else {\r\n                                if (subfield in data[field].additional_fields){\r\n                                    data[field].additional_fields[subfield].validity = false\r\n                                }\r\n                            }\r\n                            this.setState({parameters: data})\r\n                        } else {\r\n                            let params = this.state.parameters\r\n                            if (subfield === \"\"){\r\n                                if(field in params){\r\n                                    params[field].validity = false\r\n                                }\r\n                            } else {\r\n                                if (subfield in params[field].additional_fields){\r\n                                    params[field].additional_fields[subfield].validity = false\r\n                                }\r\n                            }\r\n                            this.setState({parameters: params})\r\n                        }\r\n                    }\r\n                }\r\n            } catch {}\r\n        }\r\n        if ('data' in value || 'errors' in value){\r\n            this.setState({response: JSON.stringify(value, stringify_replacer, 2), responseAlert:true})\r\n            return\r\n        }\r\n        if (typeof value === 'string'){\r\n            this.setState({response: value, responseAlert:true})\r\n        }\r\n        this.ReturnValueEditorInstance.refresh()\r\n    }\r\n\r\n\r\n    Send_to_API = () => {\r\n        Send_to_API(this.state.query, this.update_response)\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        //TODO maybe reset additional fields\r\n        this.setState({query:makeCompleteQuery(this.props.action, this.state.parameters, this.state.data, this.props.schema)})\r\n        this.QueryEditorInstance.refresh()\r\n        this.ReturnValueEditorInstance.refresh()\r\n    }\r\n\r\n    createSubField = (name, type, isValid, isInvalid, placeholder, onChange, deleteFieldFn) => {\r\n        const safe_form_fields = [\"Text\", \"Number\", \"Time\"]\r\n        if (safe_form_fields.includes(type.field)){\r\n            return (\r\n                <div key={name}>\r\n                    {name}:<br/>\r\n                    <InputGroup>\r\n                        <Form.Control\r\n                            type={type.field}\r\n                            isValid={isValid}\r\n                            isInvalid={isInvalid}\r\n                            placeholder={placeholder}\r\n                            onChange={onChange}/>\r\n                        <InputGroup.Append>\r\n                            <Button variant=\"outline-secondary p-0\" onClick={deleteFieldFn}><i className=\"bi bi-x text-danger remove-field-x\"/></Button>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                </div>)\r\n        }\r\n        if (type.field === \"Select\"){\r\n            let options_form = [<option key={\"__Null_NonSelection\"} disabled hidden value={\"Select...\"}>Select...</option>];\r\n            Object.keys(type.options).forEach(((o) =>\r\n                    options_form.push(<option key={type.options[o].name}>{type.options[o].name}</option>)\r\n            ))\r\n            return (\r\n                <div key={name}>\r\n                    {name}:<br/>\r\n                    <InputGroup>\r\n                        <Form.Control\r\n                            as={type.field.toLowerCase()}\r\n                            isValid={isValid}\r\n                            isInvalid={isInvalid}\r\n                            defaultValue={\"Select...\"}\r\n                            onChange={onChange}>\r\n                            {options_form}\r\n                        </Form.Control>\r\n                        <InputGroup.Append>\r\n                            <Button variant=\"outline-secondary p-0\" onClick={deleteFieldFn}><i className=\"bi bi-x text-danger remove-field-x\"/></Button>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                </div>)\r\n        }\r\n    }\r\n\r\n    create_field = (field, type, value_type, custom_dataTypes=[]) => {\r\n        const datatype = datatypeToFieldType(value_type, custom_dataTypes)\r\n        const ignorable = !datatype.required || this.state[type][field][\"default\"] !== null\r\n        if (datatype.field === \"Select\"){\r\n            let selected_options = []\r\n            Object.keys(this.state[type][field][\"additional_fields\"]).forEach((key) => {\r\n                selected_options.push(\r\n                    this.createSubField(\r\n                        key,\r\n                        datatypeToFieldType(this.state[type][field][\"additional_fields\"][key][\"datatype\"]),\r\n                        this.state[type][field][\"additional_fields\"][key][\"validity\"] !== null && this.state[type][field][\"additional_fields\"][key][\"validity\"],\r\n                        this.state[type][field][\"additional_fields\"][key][\"validity\"] !== null && !this.state[type][field][\"additional_fields\"][key][\"validity\"],\r\n                        key,\r\n                        (e) => {this.handleChangeCustomProperty(field, key, type, e)},\r\n                        ()=>{this.deleteAdditionalField(field, type, key)}\r\n                    )\r\n                )})\r\n            let options = [<option key={\"__Datatype_Placeholder\"} disabled hidden value=\"__Datatype_Placeholder\">{datatype.placeholder}</option>];\r\n            datatype.options.forEach((option)=>{options.push(<option key={option.name}>{option.name}</option>)})\r\n            return(\r\n                <div key={field}>\r\n                    {field}:<br/>\r\n                    <InputGroup>\r\n                        <Form.Control\r\n                            as=\"select\"\r\n                            defaultValue={(this.state[type][field][\"defaultValue\"] === null) ? \"__Datatype_Placeholder\" : this.state[type][field][\"defaultValue\"]}\r\n                            onChange={(e) => {\r\n                                if (datatype.spawn_fields) {\r\n                                    this.addAdditionalField(field, type, datatype.options.find(i => (i.name === e.target.value)).typename, e)\r\n                                } else {\r\n                                    this.handleChangeFields(field, type, e)\r\n                                }\r\n                            }}>\r\n                            {options}\r\n                        </Form.Control>\r\n                        {(ignorable) &&\r\n                        <InputGroup.Append>\r\n                            <InputGroup.Checkbox aria-label=\"Don't include this field\"\r\n                                                 onChange={(e) => {this.handleIgnoreProperty(field, type, e)}} checked={!this.state[type][field][\"not_include\"]}/>\r\n                        </InputGroup.Append>}\r\n                    </InputGroup>\r\n                    {selected_options}\r\n                </div>\r\n            )\r\n        }\r\n        return(\r\n            <div key={field}>\r\n                {field}:<br/>\r\n                <InputGroup>\r\n                    <Form.Control\r\n                        isValid={this.state[type][field][\"validity\"] !== null && this.state[type][field][\"validity\"]}\r\n                        isInvalid={this.state[type][field][\"validity\"] !== null && !this.state[type][field][\"validity\"]}\r\n                        type={datatype.field}\r\n                        placeholder={field}\r\n                        defaultValue={this.state[type][field][\"defaultValue\"]}\r\n                        onChange={(e) => {this.handleChangeFields(field, type, e)}} />\r\n                    {(ignorable) &&\r\n                    <InputGroup.Append>\r\n                        <InputGroup.Checkbox aria-label=\"Don't include this field\"\r\n                                             onChange={(e) => {this.handleIgnoreProperty(field, type, e)}} checked={!this.state[type][field][\"not_include\"]}/>\r\n                    </InputGroup.Append>}\r\n                </InputGroup>\r\n            </div>\r\n\r\n            )\r\n    }\r\n\r\n    testReturnValues(){\r\n        // console.log(this.state.parameters)\r\n        // console.log(this.state.query)\r\n    }\r\n\r\n    refreshCodeMirror = (e) => {\r\n        if(e === \"response\"){\r\n            this.setState({responseAlert:false})\r\n        }\r\n        setTimeout(() => {\r\n            this.QueryEditorInstance.refresh()\r\n            this.ReturnValueEditorInstance.refresh()\r\n        },5);\r\n    }\r\n\r\n    render(){\r\n        let action = this.props.action;\r\n        let param_fields = [];\r\n        let data_fields = [];\r\n        Object.keys(this.state.parameters).forEach((param) => {param_fields.push(this.create_field(param, \"parameters\", this.state.parameters[param].datatype, this.props.schema[\"__types\"]))})\r\n        Object.keys(this.state.data).forEach((data) => {data_fields.push(this.create_field(data, \"data\", this.state.data[data].datatype, this.props.schema[\"__types\"]))})\r\n        if(param_fields.length){\r\n            param_fields.unshift(<div key=\"param_title\" className=\"border-bottom border-dark w-100 d-flex justify-content-between\"><strong>Parameters:</strong><strong>Include:</strong></div>)\r\n        }\r\n        if(data_fields.length){\r\n            data_fields.unshift(<div key=\"data_title\" className=\"border-bottom border-dark w-100 d-flex justify-content-between\"><strong>Data:</strong><strong>Include:</strong></div>)\r\n        }\r\n        const query = this.state.query;\r\n        const response = this.state.response;\r\n        return(\r\n            <Card border=\"dark\" className=\"ml-1 mr-3 mh-100 h-100 flex-column\">\r\n                <Card.Header>\r\n                    <Card.Title className=\"edited-title\">{action.name}</Card.Title>\r\n                </Card.Header>\r\n\r\n                <Card.Body className=\"container-fluid\">\r\n                    <Row className=\"container-fluid d-flex h-100 overflow-hidden p-1\" >\r\n                        <Col sm={3} className=\"mh-100 flex-column\">\r\n                            <Form className=\"flex-grow-1 h-100\" noValidate>\r\n                                {param_fields}\r\n                                {data_fields}\r\n                                <footer className=\"position-absolute bottom-stick\">\r\n                                    {/*<Button variant=\"primary\" onClick={() => {this.testReturnValues()}}>TEST</Button>*/}\r\n                                    <Button variant=\"primary\" onClick={this.Send_to_API}>{(action.mutation)? \"Mutation\" : \"Query\"}</Button>\r\n                                </footer>\r\n                            </Form>\r\n                        </Col>\r\n                        <Col sm={9} className=\"pb-1\">\r\n                            <div className=\"mh-100 h-100 flex-column modal-tabs border border-dark\">\r\n                                <Tabs variant=\"pills\" className=\"nav-fill mx-3 mt-1\" defaultActiveKey=\"query\" onSelect={this.refreshCodeMirror}>\r\n                                    <Tab eventKey=\"query\" title={action.mutation? \"Mutation:\" : \"Query:\"}>\r\n                                        <CodeMirror value={query}\r\n                                                    className=\"no-resize mb-4 mh-100\"\r\n                                                    options={{\r\n                                                        theme: \"idea\",\r\n                                                        autoRefresh:true,\r\n                                                        lineWrapping: true,\r\n                                                        keyMap: 'sublime',\r\n                                                        mode: \"graphql\",\r\n                                                        smartIndent: true,\r\n                                                        lineNumbers: true,\r\n                                                    }}\r\n                                                    onBeforeChange={this.handleChangeQueryCodeMirror}\r\n                                                    onChange={() => {}}\r\n                                                    editorDidMount={(editor) => { this.QueryEditorInstance = editor}}\r\n                                        />\r\n                                    </Tab>\r\n                                    <Tab eventKey=\"response\" tabClassName={this.state.responseAlert?\"bg-warning text-dark\": \"\"} title=\"Response:\">\r\n                                        <CodeMirrorUn value={response}\r\n                                                      className=\"no-resize mb-4 mh-100\"\r\n                                                      options={{\r\n                                                          theme: \"idea\",\r\n                                                          autoRefresh:true,\r\n                                                          readOnly: true,\r\n                                                          lineWrapping: true,\r\n                                                          keyMap: 'sublime',\r\n                                                          mode: {name: \"javascript\", json: true},\r\n                                                          smartIndent: true,\r\n                                                          lineNumbers: true\r\n                                                      }}\r\n                                                      editorDidMount={(editor) => { this.ReturnValueEditorInstance = editor}}\r\n                                        />\r\n                                    </Tab>\r\n                                    {/*\r\n                                    {(IsTypeList(action[\"return_type\"])) &&\r\n                                    <Tab eventKey=\"listView\" title=\"List view:\">\r\n                                        <>TODO List</>\r\n                                    </Tab>\r\n                                    }*/}\r\n                                </Tabs>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport {ActionView}\r\n","import React from \"react\";\r\nimport {Button, FormControl, Modal, Pagination} from \"react-bootstrap\";\r\n\r\nclass PaginationApplet extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            modalPage: null\r\n        }\r\n    }\r\n\r\n    PageNumbers = () => {\r\n        if(this.props.pages_num <= 3){\r\n            return (\r\n                <>\r\n                    <Pagination.Prev disabled={this.props[\"current_page\"] === 1}/>\r\n                    <Pagination.Item onClick={() => {this.props.changePageFn(1)}} active={this.props[\"current_page\"] === 1}>1</Pagination.Item>\r\n                    {this.props.pages_num > 1 &&\r\n                    <Pagination.Item onClick={() => {this.props.changePageFn(2)}} active={this.props[\"current_page\"] === 2}>2</Pagination.Item>\r\n                    }\r\n                    {this.props.pages_num > 2 &&\r\n                    <Pagination.Item onClick={() => {this.props.changePageFn(3)}} active={this.props[\"current_page\"] === 3}>3</Pagination.Item>\r\n                    }\r\n                    <Pagination.Next disabled={this.props[\"current_page\"] === this.props.pages_num}/>\r\n                </>\r\n            )\r\n        }\r\n        if(this.props[\"current_page\"] === 1){\r\n            return (\r\n                <>\r\n                    <Pagination.Prev disabled/>\r\n                    <Pagination.Item onClick={() => {this.props.changePageFn(1)}} active>1</Pagination.Item>\r\n                    <Pagination.Item onClick={() => {this.props.changePageFn(2)}}>2</Pagination.Item>\r\n                    <Pagination.Item onClick={() => {this.props.changePageFn(3)}}>3</Pagination.Item>\r\n                    {this.props.pages_num !== 4 &&\r\n                    <Pagination.Ellipsis onClick={this.modalShow}/>\r\n                    }\r\n                    <Pagination.Item onClick={() => {this.props.changePageFn(this.props.pages_num)}}>{this.props.pages_num}</Pagination.Item>\r\n                    <Pagination.Next onClick={() => {this.props.changePageFn(this.props[\"current_page\"]+1)}}/>\r\n                </>\r\n            )\r\n        }\r\n        if(this.props[\"current_page\"] === this.props.pages_num){\r\n            return (\r\n                <>\r\n                    <Pagination.Prev onClick={() => {this.props.changePageFn(this.props[\"current_page\"]-1)}}/>\r\n                    <Pagination.Item onClick={() => {this.props.changePageFn(1)}}>1</Pagination.Item>\r\n                    {this.props.pages_num !== 4 &&\r\n                    <Pagination.Ellipsis onClick={this.modalShow}/>\r\n                    }\r\n                    <Pagination.Item onClick={() => {this.props.changePageFn(this.props[\"current_page\"] - 2)}}>{this.props[\"current_page\"] - 2}</Pagination.Item>\r\n                    <Pagination.Item onClick={() => {this.props.changePageFn(this.props[\"current_page\"] - 1)}}>{this.props[\"current_page\"] - 1}</Pagination.Item>\r\n                    <Pagination.Item onClick={() => {this.props.changePageFn(this.props[\"current_page\"])}} active>{this.props[\"current_page\"]}</Pagination.Item>\r\n                    <Pagination.Next disabled/>\r\n                </>\r\n            )\r\n        }\r\n        return(\r\n            <>\r\n                <Pagination.Prev onClick={() => {this.props.changePageFn(this.props[\"current_page\"]-1)}}/>\r\n                {this.props[\"current_page\"] !== 2 &&\r\n                    <Pagination.Item onClick={() => {this.props.changePageFn(1)}}>1</Pagination.Item>\r\n                }\r\n                {this.props[\"current_page\"] !== 3 && this.props[\"current_page\"] - 2 > 0 &&\r\n                    <Pagination.Ellipsis onClick={this.modalShow}/>\r\n                }\r\n                <Pagination.Item onClick={() => {this.props.changePageFn(this.props[\"current_page\"]-1)}}>{this.props[\"current_page\"] - 1}</Pagination.Item>\r\n                <Pagination.Item onClick={() => {this.props.changePageFn(this.props[\"current_page\"])}} active>{this.props[\"current_page\"]}</Pagination.Item>\r\n                <Pagination.Item onClick={() => {this.props.changePageFn(this.props[\"current_page\"] + 1)}} >{this.props[\"current_page\"] + 1}</Pagination.Item>\r\n                {this.props[\"current_page\"] !== this.props.pages_num - 2 && this.props.pages_num - this.props[\"current_page\"] !== 1 &&\r\n                    <Pagination.Ellipsis onClick={this.modalShow}/>\r\n                }\r\n                {this.props[\"current_page\"] !== this.props.pages_num - 1 &&\r\n                    <Pagination.Item  onClick={() => {this.props.changePageFn(this.props.pages_num)}} >{this.props.pages_num}</Pagination.Item>\r\n                }\r\n                <Pagination.Next onClick={() => {this.props.changePageFn(this.props.current_page+1)}}/>\r\n            </>\r\n        )\r\n    }\r\n\r\n    modalShow = () => {\r\n        this.setState({showModal: true})\r\n    }\r\n\r\n    modalClose = () => {\r\n        this.setState({showModal: false})\r\n    }\r\n\r\n    jumpToPage = (page) => {\r\n        if(this.state.modalPage >= 1 && this.state.modalPage <= this.props.pages_num){\r\n            this.props.changePageFn(page)\r\n        }\r\n    }\r\n\r\n    create_modal = () => {\r\n        return (\r\n            <Modal show={this.state.showModal} onHide={this.modalClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Jump to page ...</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <FormControl type=\"Number\"\r\n                                 placeholder=\"Page\"\r\n                                 onChange={(event) => {this.setState({modalPage:event.target.value})}}\r\n                                 isValid={this.state.modalPage >= 1 && this.state.modalPage <= this.props.pages_num}\r\n                                 isInvalid={this.state.modalPage !== null && (this.state.modalPage < 1 || this.state.modalPage > this.props.pages_num)}/>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.modalClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={() => {this.jumpToPage(this.state.modalPage)}}>\r\n                        Go\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <>\r\n                <Pagination className=\"px-2 mb-1\">\r\n                    {this.PageNumbers()}\r\n                </Pagination>\r\n                {this.create_modal()}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport {PaginationApplet}\r\n","import React from \"react\";\r\nimport {Button, Form, FormControl, InputGroup, Modal} from \"react-bootstrap\";\r\nimport {convertValue, datatypeToFieldType, validateValueType} from \"../CommonDatatypes\";\r\n\r\nclass OrderApplet extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openOrderModal:false,\r\n            openFilterModal:false,\r\n            filters: {\r\n                ordering:[]\r\n            },\r\n            filtersValidity: {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    sendFilters = () => {\r\n        //Create data object\r\n        let additional_fields = {}\r\n        for(const property in this.state.filters){\r\n            additional_fields[property] = {\r\n                value: convertValue(this.state.filters[property], this.props.filtersObject.fields.find(i => i.name === property).typename),\r\n                datatype: this.props.filtersObject.fields.find(i => i.name === property).typename\r\n            }\r\n        }\r\n        let filtersObject = {\r\n            filters: {\r\n                additional_fields: additional_fields,\r\n                datatype: this.props.type.typename + \"Filters\"\r\n            }\r\n        }\r\n\r\n        // console.log(JSON.stringify(this.state.filters));\r\n        this.props.changeFilterFn(filtersObject);\r\n    }\r\n\r\n    addToOrder = (name) => {\r\n        let newOrder = this.state.filters\r\n        newOrder[\"ordering\"].push(name)\r\n        this.setState({ order: newOrder})\r\n    }\r\n\r\n    orderingParse = (name) => {\r\n        if(name[0] === '-') {\r\n            return name.slice(1) + \" (Descending)\"\r\n        } else {\r\n            return name + \" (Ascending)\"\r\n        }\r\n    }\r\n\r\n    removeFromOrder = (index) => {\r\n        let newOrder = this.state.filters.ordering\r\n        newOrder.splice(index, 1)\r\n        this.setState({ order: newOrder})\r\n    }\r\n\r\n    orderModalShow = () => {\r\n        this.setState({openOrderModal:true})\r\n    }\r\n\r\n    orderModalClose = () => {\r\n        this.setState({openOrderModal:false})\r\n    }\r\n\r\n    create_order_modal = () => {\r\n        let order = this.state.filters.ordering.map((a, i) =>\r\n            <InputGroup key={a + i.toString()} className=\"text-center m-2\">\r\n                <FormControl\r\n                    disabled\r\n                    value={i.toString() + \". \" + this.orderingParse(a)}\r\n                    />\r\n                <InputGroup.Append>\r\n                    <Button variant=\"outline-danger\" onClick={() => {this.removeFromOrder(i)}}>X</Button>\r\n                </InputGroup.Append>\r\n            </InputGroup>\r\n        )\r\n\r\n        let fields = this.props.type.fields.map(b =>\r\n            <InputGroup key={b.name} className=\"m-2\">\r\n                <FormControl\r\n                    disabled\r\n                    aria-describedby=\"basic-addon2\"\r\n                    value={b.name}\r\n            />\r\n                <InputGroup.Append>\r\n                    <Button variant=\"outline-dark\" onClick={() => {this.addToOrder('-' + b.name)}}>▼</Button>\r\n                    <Button variant=\"outline-dark\" onClick={() => {this.addToOrder(b.name)}}>▲</Button>\r\n                </InputGroup.Append>\r\n            </InputGroup>\r\n        );\r\n        return (\r\n            <Modal show={this.state.openOrderModal} onHide={this.orderModalClose} className=\"larger-modal\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Modal heading</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"d-flex justify-content-between\">\r\n                    <div className=\"w-50 mr-4\">\r\n                        Current order:\r\n                        {order}\r\n                    </div>\r\n                    <div className=\"w-50 ml-4\" >\r\n                        Add new parameter to order by:\r\n                        {fields}\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer className=\"d-flex justify-content-between\">\r\n                    <div>\r\n                        <Button variant=\"primary\" onClick={() => {this.orderModalClose(); this.setState({order:[\"?\"]}); setTimeout(() => {this.sendFilters()},5);}}>\r\n                            Randomize!\r\n                        </Button>\r\n                    </div>\r\n                    <div>\r\n                        <Button variant=\"primary\" className=\"mr-2\" onClick={() => {this.orderModalClose(); this.sendFilters()}}>\r\n                            Save Changes\r\n                        </Button>\r\n                        <Button variant=\"secondary\" onClick={this.orderModalClose}>\r\n                            Close\r\n                        </Button>\r\n                    </div>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    filterModalShow = () => {\r\n        this.setState({openFilterModal:true})\r\n    }\r\n\r\n    filterModalClose = () => {\r\n        this.setState({openFilterModal:false})\r\n    }\r\n\r\n    handleSubfieldChange = (fieldName, e) => {\r\n        let newObj = this.state.filters\r\n        newObj[fieldName] = e.target.value\r\n        this.setState({filters: newObj})\r\n        this.subfieldValidation(fieldName)\r\n    }\r\n\r\n    subfieldValidation = (fieldName) => {\r\n        const type = this.props.filtersObject.fields.find(i => i.name === fieldName).typename\r\n        const value = this.state.filters[fieldName]\r\n        let newObj = this.state.filtersValidity\r\n        newObj[fieldName] = validateValueType(value, type)\r\n        this.setState({filtersValidity: newObj})\r\n    }\r\n\r\n    createSubField = (name, type, isValid, isInvalid, placeholder, onChange, deleteFieldFn) => {\r\n        const safe_form_fields = [\"Text\", \"Number\", \"Time\"]\r\n        if (safe_form_fields.includes(type.field)){\r\n            return (\r\n                <div key={name}>\r\n                    {name}:<br/>\r\n                    <InputGroup>\r\n                        <Form.Control\r\n                            defaultValue={this.state.filters[name]}\r\n                            type={type.field}\r\n                            isValid={isValid}\r\n                            isInvalid={isInvalid}\r\n                            placeholder={placeholder}\r\n                            onChange={onChange}/>\r\n                        <InputGroup.Append>\r\n                            <Button variant=\"outline-secondary p-0\" onClick={deleteFieldFn}><i className=\"bi bi-x text-danger remove-field-x\"/></Button>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                </div>)\r\n        }\r\n        if (type.field === \"Select\"){\r\n            let options_form = [<option key={\"__Null_NonSelection\"} disabled hidden value={\"__Null_NonSelection\"}>Select...</option>];\r\n            Object.keys(type.options).forEach(((o) =>\r\n                    options_form.push(<option key={type.options[o].name}>{type.options[o].name}</option>)\r\n            ))\r\n            return (\r\n                <div key={name}>\r\n                    {name}:<br/>\r\n                    <InputGroup>\r\n                        <Form.Control\r\n                            as={type.field.toLowerCase()}\r\n                            isValid={isValid}\r\n                            isInvalid={isInvalid}\r\n                            defaultValue={this.state.filters[name] === \"\"? \"Select...\": this.state.filters[name]}\r\n                            onChange={onChange}>\r\n                            {options_form}\r\n                        </Form.Control>\r\n                        <InputGroup.Append>\r\n                            <Button variant=\"outline-secondary p-0\" onClick={deleteFieldFn}><i className=\"bi bi-x text-danger remove-field-x\"/></Button>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                </div>)\r\n        }\r\n    }\r\n\r\n    addAdditionalField = (e) => {\r\n        let newObj = this.state.filters\r\n        newObj[e.target.value] = \"\"\r\n        this.setState({filters: newObj})\r\n        e.target.value = \"__Null_NonSelection\"\r\n    }\r\n\r\n    deleteAdditionalField = (name) => {\r\n        let newObj = this.state.filters\r\n        delete newObj[name]\r\n        this.setState({filters: newObj})\r\n    }\r\n\r\n    create_filter_modal = () => {\r\n        let options = [<option key={\"__Null_NonSelection\"} disabled hidden value={\"__Null_NonSelection\"}>Add Filter...</option>];\r\n        let selected_options = []\r\n        for (const filter of this.props.filtersObject[\"fields\"]) {\r\n            if (filter.name === \"ordering\"){\r\n                continue;\r\n            }\r\n            options.push(<option key={filter.name}>{filter.name}</option>)\r\n        }\r\n        for (const selected in this.state.filters) {\r\n            if (selected === \"ordering\"){\r\n                continue;\r\n            }\r\n            selected_options.push(this.createSubField(\r\n                selected,\r\n                datatypeToFieldType(this.props.filtersObject.fields.find(i => i.name === selected).typename),\r\n                this.state.filtersValidity[selected],\r\n                !this.state.filtersValidity[selected],\r\n                selected,\r\n                (e) => this.handleSubfieldChange(selected, e),\r\n                () => this.deleteAdditionalField(selected)))\r\n\r\n            //<div key={selected}>{selected}</div>\r\n        }\r\n\r\n\r\n        return (\r\n            <Modal show={this.state.openFilterModal} onHide={this.filterModalClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Modal heading</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"d-flex justify-content-between\">\r\n                    <div className=\"w-100 mr-4\">\r\n                        Add filter:\r\n                        <InputGroup>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                defaultValue=\"__Null_NonSelection\"\r\n                                onChange={(e) => {\r\n                                    this.addAdditionalField(e)\r\n                                }}>\r\n                                {options}\r\n                            </Form.Control>\r\n                        </InputGroup>\r\n                        { selected_options }\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer className=\"d-flex justify-content-between\">\r\n                    <div>\r\n                        <Button variant=\"primary\" className=\"mr-2\" onClick={() => {this.filterModalClose(); this.sendFilters()}}>\r\n                            Save Changes\r\n                        </Button>\r\n                        <Button variant=\"secondary\" onClick={this.filterModalClose}>\r\n                            Close\r\n                        </Button>\r\n                    </div>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <>\r\n                <div>\r\n                    <Button variant=\"outline-primary\" className=\"ml-1\" onClick={this.orderModalShow}>Order</Button>\r\n                    <Button variant=\"outline-primary\" className=\"ml-1\" onClick={this.filterModalShow}>Filter</Button>\r\n                    {this.create_order_modal()}\r\n                    {this.create_filter_modal()}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport {OrderApplet}","import React from \"react\";\r\nimport {PaginationApplet} from \"./Paginator\";\r\nimport {OrderApplet} from \"./ObjectOrderingAndFiltering\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\n\r\n\r\nclass OrderAndPagination extends React.Component {\r\n    render(){\r\n        return (\r\n            <div className=\"d-flex justify-content-between\">\r\n                <OrderApplet type={this.props.type} changeFilterFn={this.props.changeFilterFn} filtersObject={this.props.typeFilters}/>\r\n                <div>\r\n                    <Button variant=\"outline-primary\" className=\"ml-1\" onClick={this.props.expandAllFn}>Expand All</Button>\r\n                    <Button variant=\"outline-primary\" className=\"ml-1\" onClick={this.props.collapseAllFn}>Collapse All</Button>\r\n                </div>\r\n                <PaginationApplet pages_num={this.props.pages_num} current_page={this.props.current_page} changePageFn={this.props.changePageFn}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport {OrderAndPagination}","import React from \"react\";\r\nimport {Button, Form, InputGroup, Modal, Tab, Tabs} from \"react-bootstrap\";\r\nimport {datatypeToFieldType, validateValueType} from \"../CommonDatatypes\";\r\nimport {makeCompleteQuery} from \"../../Queries/QueryConstructor\";\r\nimport {Send_to_API, stringify_replacer} from \"../CommonAPI\";\r\nimport {Controlled as CodeMirror, UnControlled as CodeMirrorUn} from \"react-codemirror2\";\r\n\r\n\r\nclass InstanceActionModal extends React.Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.state = {\r\n            query: '',\r\n            response: '',\r\n            responseAlert: false\r\n        };\r\n\r\n\r\n        this.QueryEditorInstance = null;\r\n        this.ReturnValueEditorInstance = null;\r\n    }\r\n\r\n    refreshCodeMirror = (e) => {\r\n        if(e === \"result\"){\r\n            this.setState({responseAlert:false})\r\n        }\r\n        setTimeout(() => {\r\n            this.QueryEditorInstance.refresh()\r\n            this.ReturnValueEditorInstance.refresh()\r\n        },5);\r\n    }\r\n\r\n    handleChangeFields = (caller, type, event) => {\r\n        let newState = {parameters: this.state.parameters, data: this.state.data}\r\n        newState[type][caller].value = event.target.value;\r\n        newState[\"query\"] = makeCompleteQuery(this.props.modalDetails.Action, newState.parameters, newState.data, this.props.schema)\r\n        this.setState(newState)\r\n        this.fieldTypeValidation(caller, event.target.value, type)\r\n        // console.log(this.state)\r\n    }\r\n\r\n    handleChangeCustomProperty = (parent_field, caller, type, event) => {\r\n        let newState = {parameters: this.state.parameters, data: this.state.data}\r\n        newState[type][parent_field][\"additional_fields\"][caller].value = event.target.value;\r\n        newState[\"query\"] = makeCompleteQuery(this.props.modalDetails.Action, newState.parameters, newState.data, this.props.schema)\r\n        this.setState(newState)\r\n        this.additionalFieldTypeValidation(parent_field, caller, event.target.value, type)\r\n    }\r\n\r\n    handleIgnoreProperty = (caller, type, event) => {\r\n        let newState = {parameters: this.state.parameters, data: this.state.data}\r\n        newState[type][caller].not_include = !event.target.checked;\r\n        newState[\"query\"] = makeCompleteQuery(this.props.modalDetails.Action, newState.parameters, newState.data, this.props.schema)\r\n        if (!event.target.checked) {\r\n            newState[type][caller].validity = null\r\n            this.setState(newState)\r\n        } else {\r\n            this.setState(newState)\r\n            this.fieldTypeValidation(caller, this.state[type][caller].value, type)\r\n        }\r\n    }\r\n\r\n    deleteAdditionalField = (caller, parent_type, field_name) => {\r\n        let newState = {parameters: this.state.parameters, data: this.state.data}\r\n        delete newState[parent_type][caller].additional_fields[field_name]\r\n        if(newState[parent_type][caller].additional_fields && Object.keys(newState[parent_type][caller].additional_fields).length === 0 && newState[parent_type][caller].additional_fields.constructor === Object){\r\n            newState[parent_type][caller].not_include = true\r\n        }\r\n        newState[\"query\"] = makeCompleteQuery(this.props.modalDetails.Action, newState.parameters, newState.data, this.props.schema)\r\n        this.setState(newState)\r\n    }\r\n\r\n    addAdditionalField = (caller, parent_type, additional_type, event) =>{\r\n        let newState = {parameters: this.state.parameters, data: this.state.data}\r\n        event.target.value = \"__Datatype_Placeholder\"\r\n        newState[parent_type][caller].additional_fields[event.target.value] = {datatype:additional_type, value: '', validity:null}\r\n        newState[parent_type][caller].not_include = false\r\n        newState[\"query\"] = makeCompleteQuery(this.props.modalDetails.Action, newState.parameters, newState.data, this.props.schema)\r\n        this.setState(newState)\r\n    }\r\n\r\n    additionalFieldTypeValidation = (parent_field, caller, value, type) => {\r\n        let newState = {parameters: this.state.parameters, data: this.state.data}\r\n        newState[type][parent_field][\"additional_fields\"][caller].validity = validateValueType(value, newState[type][parent_field][\"additional_fields\"][caller].datatype)\r\n        this.setState(newState)\r\n    }\r\n\r\n    fieldTypeValidation = (caller, value, type) => {\r\n        let newState = {parameters: this.state.parameters, data: this.state.data}\r\n        newState[type][caller].validity = validateValueType(value, newState[type][caller][\"datatype\"])\r\n        this.setState(newState)\r\n    }\r\n\r\n    handleChangeQueryCodeMirror = (editor, event, value) => {\r\n        this.setState({query: value});\r\n    }\r\n\r\n    update_response = (value) => {\r\n        // console.log(value)\r\n        if ('data' in value || 'errors' in value){\r\n            this.setState({response: JSON.stringify(value, stringify_replacer, 2), responseAlert:true})\r\n            return\r\n        }\r\n        if (typeof value === 'string'){\r\n            this.setState({response: value, responseAlert:true})\r\n        }\r\n        this.ReturnValueEditorInstance.refresh()\r\n    }\r\n\r\n    Send_to_API = () => {\r\n        Send_to_API(this.state.query, this.update_response)\r\n    }\r\n\r\n    create_field = (field, type, value_type, custom_dataTypes=[]) => {\r\n        const datatype = datatypeToFieldType(value_type, custom_dataTypes)\r\n        const ignorable = !datatype.required || this.state[type][field][\"default\"] !== null\r\n        if (datatype.field === \"Select\"){\r\n            let selected_options = []\r\n            Object.keys(this.state[type][field][\"additional_fields\"]).forEach((key) => {\r\n                selected_options.push(\r\n                    this.createSubField(\r\n                        key,\r\n                        datatypeToFieldType(this.state[type][field][\"additional_fields\"][key][\"datatype\"]),\r\n                        this.state[type][field][\"additional_fields\"][key][\"validity\"] !== null && this.state[type][field][\"additional_fields\"][key][\"validity\"],\r\n                        this.state[type][field][\"additional_fields\"][key][\"validity\"] !== null && !this.state[type][field][\"additional_fields\"][key][\"validity\"],\r\n                        key,\r\n                        (e) => {this.handleChangeCustomProperty(field, key, type, e)},\r\n                        ()=>{this.deleteAdditionalField(field, type, key)}\r\n                    )\r\n                )})\r\n            let options = [<option key={\"__Datatype_Placeholder\"} disabled hidden value={\"__Datatype_Placeholder\"}>{datatype.placeholder}</option>];\r\n            const defaultValue= this.state[type][field][\"value\"] !== \"\" ? this.state[type][field][\"value\"] : (this.state[type][field][\"defaultValue\"] === \"\") ? datatype.placeholder : this.state[type][field][\"defaultValue\"]\r\n            // console.log(defaultValue)\r\n            datatype.options.forEach((option)=>{options.push(<option key={option.name}>{option.name}</option>)})\r\n            return(\r\n                <div key={field}>\r\n                    {field}:<br/>\r\n                    <InputGroup>\r\n                        <Form.Control\r\n                            as=\"select\"\r\n                            defaultValue={defaultValue}\r\n                            onChange={(e) => {\r\n                                if (datatype.spawn_fields) {\r\n                                    this.addAdditionalField(field, type, datatype.options.find(i => (i.name === e.target.value)).typename, e)\r\n                                } else {\r\n                                    this.handleChangeFields(field, type, e)\r\n                                }\r\n                            }}>\r\n                            {options}\r\n                        </Form.Control>\r\n                        {(ignorable) &&\r\n                        <InputGroup.Append>\r\n                            <InputGroup.Checkbox aria-label=\"Don't include this field\"\r\n                                                 onChange={(e) => {this.handleIgnoreProperty(field, type, e)}} checked={!this.state[type][field][\"not_include\"]}/>\r\n                        </InputGroup.Append>}\r\n                    </InputGroup>\r\n                    {selected_options}\r\n                </div>\r\n            )\r\n        }\r\n        return(\r\n            <div key={field}>\r\n                {field}:<br/>\r\n                <InputGroup>\r\n                    <Form.Control\r\n                        isValid={this.state[type][field][\"validity\"] !== null && this.state[type][field][\"validity\"]}\r\n                        isInvalid={this.state[type][field][\"validity\"] !== null && !this.state[type][field][\"validity\"]}\r\n                        type={datatype.field}\r\n                        placeholder={field}\r\n                        defaultValue={this.state[type][field][\"defaultValue\"]}\r\n                        onChange={(e) => {this.handleChangeFields(field, type, e)}} />\r\n                    {(ignorable) &&\r\n                    <InputGroup.Append>\r\n                        <InputGroup.Checkbox aria-label=\"Don't include this field\"\r\n                                             onChange={(e) => {this.handleIgnoreProperty(field, type, e)}} checked={!this.state[type][field][\"not_include\"]}/>\r\n                    </InputGroup.Append>}\r\n                </InputGroup>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({query:makeCompleteQuery(this.props.modalDetails.Action, this.state.parameters, this.state.data, this.props.schema)})\r\n        this.QueryEditorInstance.refresh()\r\n        this.ReturnValueEditorInstance.refresh()\r\n    }\r\n\r\n    static getDerivedStateFromProps(props) {\r\n        const action = props.modalDetails.Action;\r\n        if (action !== null) {\r\n            let param_fields = {};\r\n            let data_fields = {};\r\n            if (\"parameters\" in action) {\r\n                action.parameters.forEach((param) => {\r\n                    param_fields[param.name] = {\r\n                        defaultValue: (param.name in props.modalDetails.Object)? props.modalDetails.Object[param.name] : (\"default\" in param) ? param.default : \"\",\r\n                        value: (param.name in props.modalDetails.Object)? props.modalDetails.Object[param.name] : '',\r\n                        datatype: param.typename,\r\n                        validity: null,\r\n                        not_include: param.typename[param.typename.length - 1] !== \"!\" || param.default !== null,\r\n                        additional_fields: {}\r\n                    }\r\n                })\r\n            }\r\n            if (\"data\" in action) {\r\n                action.data.forEach((data) => {\r\n                    data_fields[data.name] = {\r\n                        defaultValue: (data.name in props.modalDetails.Object)? props.modalDetails.Object[data.name] : (\"default\" in data) ? data.default : \"\",\r\n                        value: (data.name in props.modalDetails.Object)? props.modalDetails.Object[data.name] : '',\r\n                        datatype: data.typename,\r\n                        validity: null,\r\n                        not_include: data.typename[data.typename.length - 1] !== \"!\" || data.default !== null,\r\n                        additional_fields: {}\r\n                    }\r\n                })\r\n            }\r\n            return{\r\n                parameters: param_fields,\r\n                data: data_fields,\r\n            }\r\n        }\r\n        return null\r\n    }\r\n\r\n\r\n    render(){\r\n        let param_fields = [];\r\n        let data_fields = [];\r\n        Object.keys(this.state.parameters).forEach((param) => {param_fields.push(this.create_field(param, \"parameters\", this.state.parameters[param].datatype, this.props.schema[\"__types\"]))})\r\n        Object.keys(this.state.data).forEach((data) => {data_fields.push(this.create_field(data, \"data\", this.state.data[data].datatype, this.props.schema[\"__types\"]))})\r\n        if(param_fields.length){\r\n            param_fields.unshift(<div key=\"param_title\" className=\"border-bottom border-dark w-100 d-flex justify-content-between\"><strong>Parameters:</strong><strong>Include:</strong></div>)\r\n        }\r\n        if(data_fields.length){\r\n            data_fields.unshift(<div key=\"data_title\" className=\"border-bottom border-dark w-100 d-flex justify-content-between\"><strong>Data:</strong><strong>Include:</strong></div>)\r\n        }\r\n\r\n        const query = this.state.query;\r\n        const response = this.state.response;\r\n        return(\r\n            <>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Modal title</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <Tabs className=\"nav-fill mx-3 mt-1\" defaultActiveKey=\"form\" onSelect={this.refreshCodeMirror}>\r\n                        <Tab eventKey=\"form\" title=\"Form\">\r\n                            {param_fields}\r\n                            {data_fields}\r\n                        </Tab>\r\n                        <Tab eventKey=\"query\" title=\"Query\">\r\n                            <CodeMirror value={query}\r\n                                        className=\"no-resize mb-4 mh-100\"\r\n                                        options={{\r\n                                            theme: \"idea\",\r\n                                            autoRefresh:true,\r\n                                            lineWrapping: true,\r\n                                            keyMap: 'sublime',\r\n                                            mode: \"graphql\",\r\n                                            smartIndent: true,\r\n                                            lineNumbers: true,\r\n                                        }}\r\n                                        onBeforeChange={this.handleChangeQueryCodeMirror}\r\n                                        onChange={() => {}}\r\n                                        editorDidMount={(editor) => { this.QueryEditorInstance = editor}}\r\n                            />\r\n                        </Tab>\r\n                        <Tab eventKey=\"result\" tabClassName={this.state.responseAlert?\"bg-warning text-dark\": \"\"} title=\"Result\">\r\n                            <CodeMirrorUn value={response}\r\n                                          className=\"no-resize mb-4 mh-100\"\r\n                                          options={{\r\n                                              theme: \"idea\",\r\n                                              autoRefresh:true,\r\n                                              readOnly: true,\r\n                                              lineWrapping: true,\r\n                                              keyMap: 'sublime',\r\n                                              mode: {name: \"javascript\", json: true},\r\n                                              smartIndent: true,\r\n                                              lineNumbers: true\r\n                                          }}\r\n                                          editorDidMount={(editor) => { this.ReturnValueEditorInstance = editor}}\r\n                            />                        </Tab>\r\n                    </Tabs>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={this.Send_to_API}>Execute Action</Button>\r\n                </Modal.Footer>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InstanceActionModal","import React from \"react\";\r\nimport {Accordion, Button, ButtonGroup, Card, Col, Modal, Row} from \"react-bootstrap\";\r\nimport {createListQuery} from \"../../Queries/QueryConstructor\";\r\nimport {Send_to_API} from \"../CommonAPI\";\r\nimport {PropertyToString} from \"../CommonDatatypes\";\r\nimport {OrderAndPagination} from \"./ObjectListControl\";\r\nimport TooltipButton from \"react-bootstrap-tooltip-button2\";\r\nimport InstanceActionModal from \"./InstanceActionModal\";\r\n\r\nclass ActiveObjectList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pages: null,\r\n            per_page: 10,\r\n            loaded_objects: [],\r\n            current_page: 1,\r\n            pages_num: 1,\r\n            filters: {},\r\n            expandedTabs:[],\r\n            instanceActionModal:{\r\n                Action:null,\r\n                Object:null,\r\n                show:false\r\n            }\r\n        }\r\n\r\n        this.reloadSchema()\r\n    }\r\n\r\n    change_filters = (filters) => {\r\n        this.setState({filters:filters})\r\n        setTimeout(() => {\r\n            this.reloadSchema()\r\n        },15);\r\n    }\r\n\r\n    load_objects = (objects_json) => {\r\n        const results = objects_json[\"data\"][Object.keys(objects_json[\"data\"])[0]]\r\n        let pages_num = Math.ceil(results[\"count\"] / this.state[\"per_page\"])\r\n        this.setState({loaded_objects: results[\"data\"], pages_num: pages_num})\r\n    }\r\n\r\n    change_page = (target_page) => {\r\n        this.setState({current_page: Number(target_page)})\r\n        this.reloadSchema(Number(target_page))\r\n    }\r\n\r\n    reloadSchema = (current_page=this.state[\"current_page\"]) => {\r\n        try {\r\n            // console.log(createListQuery(this.props.object, this.props.schema[\"__types\"], (current_page-1)*this.state.per_page, this.state.per_page, this.state.order))\r\n            if (this.props.object.name !== null) {\r\n                Send_to_API(createListQuery(this.props.object, this.props.schema[\"__types\"], (current_page-1)*this.state.per_page, this.state.per_page, this.state.filters), this.load_objects, console.log)\r\n            }\r\n        } catch (e){\r\n            // console.log(\"Could not make query\")\r\n        }\r\n    }\r\n\r\n    makeObjectActionButton = (action, object) => {\r\n        if(!action[\"permitted\"]){\r\n            return (<TooltipButton\r\n                    disabled\r\n                    key={action.name}\r\n                    title={action.name}\r\n                    tooltipText={action[\"deny_reason\"]}\r\n                    tooltipPlacement=\"left\"\r\n                    tooltipId=\"tt2\"\r\n                />\r\n            )\r\n        }\r\n        return (\r\n            <Button key={action.name} onClick={() => this.showInstanceAction(action, object)}>\r\n                {action.name}\r\n            </Button>\r\n        )\r\n    }\r\n\r\n    showInstanceAction = (action, object) => {\r\n        this.setState({\r\n            instanceActionModal:{\r\n                Action:action,\r\n                Object:object,\r\n                show:true\r\n            }})\r\n    }\r\n\r\n    hideInstanceAction = () => {\r\n        this.setState({\r\n            instanceActionModal:{\r\n                Action:null,\r\n                Object:null,\r\n                show:false\r\n            }\r\n        })\r\n    }\r\n\r\n    openAllCards = () => {\r\n        this.setState({expandedTabs:[...Array(this.state.per_page).keys()]})\r\n    }\r\n\r\n    closeAllCards = () => {\r\n        this.setState({expandedTabs:[]})\r\n    }\r\n\r\n    openOrCloseCard = (card_id) => {\r\n        let newExpanded = this.state.expandedTabs;\r\n        if (newExpanded.includes(card_id)){\r\n            newExpanded.splice(newExpanded.indexOf(card_id), 1)\r\n        } else {\r\n            newExpanded.push(card_id);\r\n        }\r\n        this.setState({expandedTabs: newExpanded})\r\n    }\r\n\r\n    objectAccordion = (object, i) => {\r\n        let objectAttributes = []\r\n        let objectActions = []\r\n        const openTab = this.state[\"expandedTabs\"].includes(i)\r\n        for (const property in object){\r\n            if(property === \"__str__\"){\r\n                continue\r\n            }\r\n            if(property === \"__actions\"){\r\n                object[property].forEach((act) => objectActions.push(this.makeObjectActionButton(act, object)))\r\n                continue\r\n            }\r\n            objectAttributes.push(<div key={property}><strong>{property}:</strong> {PropertyToString(property, object)}</div>)\r\n        }\r\n        return (\r\n            <Accordion key={object.name + i.toString()} activeKey={openTab ? \"0\": \"X\"} className=\"mr-2\">\r\n                <Card>\r\n                    <Accordion.Toggle as={Card.Header} eventKey=\"0\" className=\"bg-secondary\" onClick={()=>this.openOrCloseCard(i)}>\r\n                        {object[\"__str__\"]}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>\r\n                            <Row>\r\n                                <Col sm={9}>\r\n                                    {objectAttributes}\r\n                                </Col>\r\n                                <Col sm={3}>\r\n                                    Actions:<br/>\r\n                                    <ButtonGroup vertical>\r\n                                        {objectActions}\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </Accordion>\r\n        )\r\n    }\r\n\r\n    generateObjectList = () => {\r\n        let objectItems = []\r\n        this.state.loaded_objects.forEach((obj, i) => {objectItems.push(this.objectAccordion(obj, i))})\r\n        return objectItems\r\n    }\r\n\r\n    render() {\r\n        let objectItems = this.generateObjectList()\r\n        return (\r\n            <div className=\"ml-1 pr-1 mh-100 h-100 flex-column\">\r\n                {this.props.object.name !== null &&\r\n                <>\r\n                    <OrderAndPagination\r\n                        type={this.props.schema[\"__types\"].find(i => i.typename === this.props.object.name)}\r\n                        typeFilters={this.props.schema[\"__types\"].find(i => i.typename === this.props.object.name + \"Filters\")}\r\n                        pages_num={this.state.pages_num}\r\n                        current_page={this.state[\"current_page\"]}\r\n                        changePageFn={this.change_page}\r\n                        changeFilterFn={this.change_filters}\r\n                        expandAllFn={this.openAllCards}\r\n                        collapseAllFn={this.closeAllCards}\r\n                    />\r\n                    {objectItems}\r\n                    <Modal show={this.state.instanceActionModal.show} className=\"InstanceActionModal\" onHide={this.hideInstanceAction}>\r\n                        <InstanceActionModal\r\n                            modalDetails={this.state.instanceActionModal}\r\n                            objectType={this.props.object}\r\n                            schema={this.props.schema}/>\r\n                    </Modal>\r\n                </>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport {ActiveObjectList}","import React from \"react\";\r\nimport {Button, Col, Row} from \"react-bootstrap\";\r\nimport {ActionView} from \"./ActionView\";\r\nimport {ActiveObjectList} from \"./ActiveObjectList\";\r\nimport TooltipButton from \"react-bootstrap-tooltip-button2\";\r\n\r\nclass ObjectActionsButtons extends React.Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.state = {\r\n            active: {name: null}\r\n        };\r\n    }\r\n\r\n    handleShow = (action) => {\r\n        this.setState({active: action})\r\n    }\r\n\r\n    render_button(action){\r\n        if(!action[\"permitted\"]){\r\n            return(<TooltipButton\r\n                className=\"mb-1 ml-3 mr-3 mt-2\"\r\n                disabled\r\n                key={action.name}\r\n                title={action.name}\r\n                tooltipText={action[\"deny_reason\"]}\r\n                tooltipPlacement=\"bottom\"\r\n                tooltipId=\"tt1\"\r\n            />)\r\n        }\r\n        return(\r\n            <Button variant=\"primary\" onClick={() => {this.handleShow(action)}} key={action.name} className=\"mb-1 ml-3 mr-3 mt-2\">\r\n                {action.name}\r\n            </Button>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        if(this.props.schema === null || this.props.schema === undefined){\r\n            return(\r\n                <>\r\n                    <strong>Could not obtain schema, check your connection to the API, then refresh</strong>\r\n                </>\r\n            )\r\n        }\r\n\r\n        let buttons = [];\r\n        if(this.props.object.name !== null) {\r\n            buttons.push(\r\n                    <Button variant=\"outline-primary\" onClick={() => {this.handleShow({name: null})}} key={\"__FullViewList\"} className=\"mb-1 ml-3 mr-3 mt-2\">\r\n                        Full Object List\r\n                    </Button>)\r\n        }\r\n        if(this.props.object){\r\n            if(this.props.object.name){\r\n                let action_list = this.props.schema[\"__objects\"].find(obj => {return obj.name === this.props.object.name});\r\n                if(typeof(action_list) !== \"undefined\"){\r\n                    action_list.actions.forEach((e) => {\r\n                        buttons.push(this.render_button(e))\r\n                    })\r\n                }\r\n            } else if (this.props.object.name === null){\r\n                let action_list = this.props.schema[\"__actions\"]\r\n                if(typeof(action_list) !== \"undefined\"){\r\n                    action_list.forEach((e) => {\r\n                        buttons.push(this.render_button(e))\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        return(\r\n            <div className=\"d-flex flex-column h-100 w-100\">\r\n                <Row className=\"mr-1 ml-1\">\r\n                    <Col className=\"p-0\">\r\n                        {buttons}\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"flex-grow-1 mh-100 h-100 mr-1 ml-1\">\r\n                    <Col className=\"px-2 py-1\">\r\n                        {this.state.active.name === null ?\r\n                            <ActiveObjectList object={this.props.object} schema={this.props.schema} key={\"ListOfObjects_\" + this.props.object.name}/> :\r\n                            <ActionView action={this.state.active} schema={this.props.schema} object={this.props.object} key={\"ActionView\" + this.state.active.name}/>}\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport {ObjectActionsButtons}\r\n","import React from \"react\";\r\nimport {Col, ListGroup, Row} from \"react-bootstrap\";\r\nimport {ObjectActionsButtons} from \"./objects/ActionButtons\";\r\n\r\n\r\nclass ObjectList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {activeObject: null}\r\n    }\r\n\r\n    changeActive(object){\r\n        this.props[\"activeChange\"](object)\r\n        this.setState({activeObject:object})\r\n    }\r\n\r\n    render_item(item){\r\n        return(\r\n            <ListGroup.Item active={this.state[\"activeObject\"] === item.name} action onClick={() => {this.changeActive(item)}} key={item.name}>\r\n                {item.name}\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let items = [];\r\n        if(this.props.schema !== null && this.props.schema !== undefined){\r\n            if(this.props.schema[\"__actions\"].length > 0){\r\n                items.push(\r\n                    <ListGroup.Item action active={this.state[\"activeObject\"] === null} onClick={() => {this.changeActive({name: null})}} key={\"__unassigned_actions\"} className={\"bg-object text-dark\"}>\r\n                        Unassigned\r\n                    </ListGroup.Item>\r\n                )\r\n            }\r\n            this.props.schema[\"__objects\"].forEach(\r\n                (i) => {\r\n                    items.push(this.render_item(i));\r\n                })\r\n        }\r\n        return (\r\n            <div>\r\n                <h6 className=\"mx-3 m-2\">Objects:</h6>\r\n                <ListGroup>\r\n                    {items}\r\n                </ListGroup>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Objects extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {activeObject: {name:null}}\r\n    }\r\n\r\n    changeObject = (object) => {\r\n        this.setState({activeObject: object})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row className=\"flex-grow-1 overflow-scroll \">\r\n                <Col sm={2} className='bg-secondary pl-4 mh-100'>\r\n                    <ObjectList activeChange={this.changeObject} schema={this.props.schema}/>\r\n                </Col>\r\n                <Col sm={10} className='overflow-auto py-2 px-0 mh-100 d-flex'>\r\n                    <ObjectActionsButtons object={this.state[\"activeObject\"]} schema={this.props.schema} key={this.state[\"activeObject\"].name}/>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Objects;\r\n","import React from 'react';\n\nimport Actions from \"./Pages/Actions\"\nimport Objects from \"./Pages/Objects\"\nimport {\n    Container,\n    Navbar,\n    Nav,\n    Dropdown,\n    FormControl,\n    InputGroup,\n    Button,\n    OverlayTrigger,\n    Tooltip\n} from \"react-bootstrap\";\nimport 'regenerator-runtime/runtime'\nimport {api_login, api_login_status, api_logout, getCookie, getSimpleSchema, setCookie} from \"./Pages/CommonAPI\";\n\n\nclass TopBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {navbarKey: \"objects\", login_text: \"\"}\n        this.loginTextHandler = this.loginTextHandler.bind(this)\n        this.loginButton = this.loginButton.bind(this)\n        this.maybeSubmit = this.maybeSubmit.bind(this)\n    }\n\n    loginTextHandler(e){\n        this.setState({login_text:e.target.value})\n    }\n\n    loginButton(){\n        this.props.login_fn(this.state.login_text)\n    }\n\n    changeView(view){\n        this.setState({navbarKey:view})\n        this.props.viewChange(view)\n    }\n\n    maybeSubmit(e){\n        if (e.key === \"Enter\"){\n            this.loginButton()\n        }\n    }\n\n    make_quickLogin(username){\n        let display_username = username\n        let key = \"login_\"\n        if (username === null){\n            display_username = <em>Not logged in</em>\n            key += \"_anonymous\"\n        } else {\n            key += username\n        }\n        if (username === this.props.current_user){\n            display_username = <strong>{display_username}</strong>\n        }\n        return(<Dropdown.Item onClick={() => {if (this.props.current_user !== username){this.props.login_fn(username)}}} key={key}>{display_username}</Dropdown.Item>)\n    }\n\n    render() {\n        let saved_logins = []\n        this.props.logins.forEach((e) => {saved_logins.push(this.make_quickLogin(e))})\n        const is_anon = (this.props.current_user === null)\n\n        return (\n            <Navbar variant={\"dark\"} expand=\"lg\" className={\"navbar-expand-lg text-white navbar-expand bg-primary\"}>\n                <div className=\"navbar-collapse collapse w-100 order-1 order-md-0 dual-collapse2\">\n                    <Navbar.Brand href=\"https://www.github.com/karlosss/simple_api\">Simple-API</Navbar.Brand>\n                    <div className=\"collapse navbar-collapse\">\n                        <Nav variant=\"pills\" activeKey={this.state.navbarKey}>\n                            <Nav.Link onClick={() => {this.changeView(\"objects\")}} eventKey=\"objects\">Objects</Nav.Link>\n                            {/* <Nav.Link onClick={() => {this.changeView(\"actions\")}} eventKey=\"actions\">Actions</Nav.Link> */}\n                        </Nav>\n                    </div>\n                </div>\n                <div className=\"collapse navbar-collapse pe-4\">\n                    <ul className=\"navbar-nav me-auto ms-auto\">\n                        <OverlayTrigger\n                            placement=\"left\"\n                            delay={{ show: 250, hide: 400 }}\n\n                            overlay={\n                                <Tooltip id={`tooltip`}>\n                                    <strong>{this.props.connected? \"Succesfully fetched schema from API\": \"Failed to fetch schema from API\"}</strong>.\n                                </Tooltip>\n                            }>\n                            {this.props.connected? <i className=\"bi bi-check connected-icon text-success\"/>  : <i className=\"bi bi-x connected-icon text-danger\"/>}\n                        </OverlayTrigger>\n                        <Dropdown >\n                            <Dropdown.Toggle id=\"login-dropdown\" className=\"nav-link text-white\">\n                                {is_anon ? \"Not logged in\" : this.props.current_user}\n                            </Dropdown.Toggle>\n\n                            <Dropdown.Menu className=\"dropdown-menu large-dropdown\" aria-labelledby=\"navbarDropdown\" alignRight>\n                                {!is_anon ?\n                                    <>\n                                        <Dropdown.Item onClick={() => this.props.logout_fn(this.props.current_user)}>Logout Current User</Dropdown.Item>\n                                        <Dropdown.Divider />\n                                    </> : <></>}\n                                <label className=\"px-4\">Login:</label>\n                                <InputGroup className=\"mb-3 px-4\">\n                                    <FormControl\n                                        placeholder=\"Username\"\n                                        aria-label=\"Username to login as\"\n                                        aria-describedby=\"basic-addon2\"\n                                        value={this.state.login_text}\n                                        onChange={this.loginTextHandler}\n                                        onKeyDown={this.maybeSubmit}\n                                    />\n                                    <InputGroup.Append>\n                                        <Button onClick={this.loginButton} variant=\"outline-primary\" type=\"submit\">Login</Button>\n                                    </InputGroup.Append>\n                                </InputGroup>\n                                <Dropdown.Divider />\n                                {saved_logins}\n                                <Dropdown.Divider />\n                                <Dropdown.Item onClick={this.props.logout_fn_all}>Logout All</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </ul>\n                </div>\n            </Navbar>\n        )\n    }\n}\n /*\n\nclass FrontPage extends React.Component{\n    render() {\n        return (\n            <div>\n                <Card>\n                    <Card.Body>Hi! I'm the frontpage, click above on \"Objects\" or \"Actions\" to start exploring your API</Card.Body>\n                </Card>\n            </div>\n        )\n    }\n}\n\n  */\n\nclass ViewSelector extends React.Component{\n    constructor(props) {\n        super(props);\n        const windows = {\n            'objects': Objects,\n            'actions': Actions}\n        let saved_logins = getCookie(\"savedLogins\")\n        let logins = [null]\n        if(!saved_logins){\n            setCookie(\"savedLogins\", JSON.stringify(logins))\n        } else {\n            logins = JSON.parse(getCookie(\"savedLogins\"))\n        }\n        this.state = {activeView: Objects, windows:windows, logins:logins, current_user:null, schema:null, errors:null}\n        api_login_status(this.changeUser, ()=>{})\n        this.reloadSchema()\n    }\n\n    reloadSchema(){\n        getSimpleSchema((schema)=>{this.setState({schema:schema})}, (e) => {console.log(e); this.setState({schema:null})})\n    }\n\n    changeView = (view) => {\n        this.reloadSchema()\n        // console.log(this.state.schema)\n        this.setState({activeView: this.state.windows[view]})\n    }\n\n    changeUser = (username) => {\n        // console.log(username)\n        if (!this.state.logins.includes(username)){\n            let newArr = this.state.logins.concat(username)\n            this.setState({logins:newArr})\n            setCookie(\"savedLogins\", JSON.stringify(newArr))\n        }\n        this.setState({current_user:username})\n        this.reloadSchema()\n    }\n\n    logoutUser = (username) => {\n        // console.log(username)\n        if (username === null){\n            return\n        }\n        if (username === this.state.current_user){\n            this.setState({current_user:null})\n        }\n        let newArr = this.state.logins.filter(e => e !== username)\n\n        this.setState({logins: newArr})\n        setCookie(\"savedLogins\", JSON.stringify(newArr))\n    }\n\n    logoutAll = () => {\n        this.setState({logins:[null], current_user:null})\n        setCookie(\"savedLogins\", JSON.stringify([null]))\n    }\n\n\n    render() {\n        const View = this.state.activeView;\n        return(\n            <>\n                <TopBar viewChange={this.changeView}\n                        logins={this.state.logins}\n                        login_fn={(user) => {api_login(user, this.changeUser, ()=>{})}}\n                        logout_fn={(user) => {api_logout(user, this.logoutUser, ()=>{})}}\n                        logout_fn_all={() => {api_logout(this.state.current_user, this.logoutAll, ()=>{})}}\n                        current_user={this.state.current_user}\n                        connected={this.state.schema !== null}/>\n                <View schema={this.state.schema} key={this.state.current_user}/>\n            </>\n        )\n    }\n}\n\n\nconst App = () => {\n    return (\n        <Container fluid className=\"container-fluid d-flex flex-column vh-100 p-0 top-container\">\n            <ViewSelector/>\n        </Container>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// Importing the Bootstrap CSS\nimport './App.scss'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}